// Code generated by protoc-gen-go. DO NOT EDIT.
// source: goodbye.proto

package tracingtest

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SayGoodbyeRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SayGoodbyeRequest) Reset()         { *m = SayGoodbyeRequest{} }
func (m *SayGoodbyeRequest) String() string { return proto.CompactTextString(m) }
func (*SayGoodbyeRequest) ProtoMessage()    {}
func (*SayGoodbyeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d395ad58c98b3c6, []int{0}
}

func (m *SayGoodbyeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SayGoodbyeRequest.Unmarshal(m, b)
}
func (m *SayGoodbyeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SayGoodbyeRequest.Marshal(b, m, deterministic)
}
func (m *SayGoodbyeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SayGoodbyeRequest.Merge(m, src)
}
func (m *SayGoodbyeRequest) XXX_Size() int {
	return xxx_messageInfo_SayGoodbyeRequest.Size(m)
}
func (m *SayGoodbyeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SayGoodbyeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SayGoodbyeRequest proto.InternalMessageInfo

func (m *SayGoodbyeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SayGoodbyeReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SayGoodbyeReply) Reset()         { *m = SayGoodbyeReply{} }
func (m *SayGoodbyeReply) String() string { return proto.CompactTextString(m) }
func (*SayGoodbyeReply) ProtoMessage()    {}
func (*SayGoodbyeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d395ad58c98b3c6, []int{1}
}

func (m *SayGoodbyeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SayGoodbyeReply.Unmarshal(m, b)
}
func (m *SayGoodbyeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SayGoodbyeReply.Marshal(b, m, deterministic)
}
func (m *SayGoodbyeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SayGoodbyeReply.Merge(m, src)
}
func (m *SayGoodbyeReply) XXX_Size() int {
	return xxx_messageInfo_SayGoodbyeReply.Size(m)
}
func (m *SayGoodbyeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SayGoodbyeReply.DiscardUnknown(m)
}

var xxx_messageInfo_SayGoodbyeReply proto.InternalMessageInfo

func (m *SayGoodbyeReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*SayGoodbyeRequest)(nil), "tracingtest.SayGoodbyeRequest")
	proto.RegisterType((*SayGoodbyeReply)(nil), "tracingtest.SayGoodbyeReply")
}

func init() { proto.RegisterFile("goodbye.proto", fileDescriptor_8d395ad58c98b3c6) }

var fileDescriptor_8d395ad58c98b3c6 = []byte{
	// 144 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xcf, 0xcf, 0x4f,
	0x49, 0xaa, 0x4c, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2e, 0x29, 0x4a, 0x4c, 0xce,
	0xcc, 0x4b, 0x2f, 0x49, 0x2d, 0x2e, 0x51, 0x52, 0xe7, 0x12, 0x0c, 0x4e, 0xac, 0x74, 0x87, 0x28,
	0x08, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0xb4, 0xb9, 0xf8, 0x91, 0x15, 0x16, 0xe4,
	0x54, 0x0a, 0x49, 0x70, 0xb1, 0xe7, 0xa6, 0x16, 0x17, 0x27, 0xa6, 0xc3, 0x54, 0xc2, 0xb8, 0x46,
	0xe1, 0x5c, 0xec, 0x50, 0x95, 0x42, 0x3e, 0x5c, 0x5c, 0x08, 0x7d, 0x42, 0x72, 0x7a, 0x48, 0x96,
	0xeb, 0x61, 0xd8, 0x2c, 0x25, 0x83, 0x53, 0xbe, 0x20, 0xa7, 0x52, 0x89, 0x21, 0x89, 0x0d, 0xec,
	0x05, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb7, 0x6e, 0xe5, 0x4d, 0xd3, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GoodbyeClient is the client API for Goodbye service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoodbyeClient interface {
	SayGoodbye(ctx context.Context, in *SayGoodbyeRequest, opts ...grpc.CallOption) (*SayGoodbyeReply, error)
}

type goodbyeClient struct {
	cc *grpc.ClientConn
}

func NewGoodbyeClient(cc *grpc.ClientConn) GoodbyeClient {
	return &goodbyeClient{cc}
}

func (c *goodbyeClient) SayGoodbye(ctx context.Context, in *SayGoodbyeRequest, opts ...grpc.CallOption) (*SayGoodbyeReply, error) {
	out := new(SayGoodbyeReply)
	err := c.cc.Invoke(ctx, "/tracingtest.Goodbye/SayGoodbye", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoodbyeServer is the server API for Goodbye service.
type GoodbyeServer interface {
	SayGoodbye(context.Context, *SayGoodbyeRequest) (*SayGoodbyeReply, error)
}

func RegisterGoodbyeServer(s *grpc.Server, srv GoodbyeServer) {
	s.RegisterService(&_Goodbye_serviceDesc, srv)
}

func _Goodbye_SayGoodbye_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SayGoodbyeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodbyeServer).SayGoodbye(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tracingtest.Goodbye/SayGoodbye",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodbyeServer).SayGoodbye(ctx, req.(*SayGoodbyeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Goodbye_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tracingtest.Goodbye",
	HandlerType: (*GoodbyeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayGoodbye",
			Handler:    _Goodbye_SayGoodbye_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "goodbye.proto",
}
